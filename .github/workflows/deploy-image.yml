name: Create and publish a Docker image

on:
    push:
        branches: ["main"]

env:
    REGISTRY: ghcr.io
    WEB_IMAGE_NAME: ${{ github.repository }}_web
    DOCS_IMAGE_NAME: ${{ github.repository }}_docs

jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract metadata for Docker Web Image
              id: meta_web
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.WEB_IMAGE_NAME }}
                  tags: type=raw,value=latest

            - name: Extract metadata for Docker Docs Image
              id: meta_docs
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.DOCS_IMAGE_NAME }}
                  tags: type=raw,value=latest

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Web Docker Image
              id: push_web
              uses: docker/build-push-action@v5
              with:
                  context: apps/web
                  push: true
                  platforms: linux/amd64
                  tags: ${{ steps.meta_web.outputs.tags }}
                  labels: ${{ steps.meta_web.outputs.labels }}
                  file: apps/web/Dockerfile

            - name: Wait for 5 seconds
              run: sleep 5

            - name: Build and push Docs Docker Image
              id: push_docs
              uses: docker/build-push-action@v5
              with:
                  context: apps/docs
                  push: true
                  platforms: linux/amd64
                  tags: ${{ steps.meta_docs.outputs.tags }}
                  labels: ${{ steps.meta_docs.outputs.labels }}
                  file: apps/docs/Dockerfile

            # - name: Clean up old images
            #   env:
            #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #     OWNER: ChibaLLC
            #     REPO: manyumba
            #     PACKAGE: manyumba
            #   run: |
            #     echo "Cleaning up old images, keeping only the latest..."

            #     # Fetch package versions
            #     versions=$(gh api "/users/${OWNER}/packages/container/${PACKAGE}/versions" --jq '.[].id')

            #     echo "Found versions:"
            #     echo "$versions"

            #     # Keep the first (latest) version and delete the rest
            #     count=0
            #     for id in $versions; do
            #       if [ $count -eq 0 ]; then
            #         echo "Keeping latest version: $id"
            #       else
            #         echo "Deleting old version: $id"
            #         gh api \
            #           --method DELETE \
            #           "/users/${OWNER}/packages/container/${PACKAGE}/versions/${id}" || true
            #       fi
            #       count=$((count+1))
            #     done

            #     echo "âœ… Cleanup complete! Only the latest remains."
            # - name: Image details
            #   run: |
            #       echo "Web Image: ${{ steps.push_web.outputs.image }}"
            #       echo "Docs Image: ${{ steps.push_docs.outputs.image }}"
            #       echo "Tags: ${{ steps.meta.outputs.tags }}"
            #       echo "Labels: ${{ steps.meta.outputs.labels }}"
            - name: Image details
              run: |
                  echo "Web Image: ${{ steps.push_web.outputs.imageid }}"
                  echo "Docs Image: ${{ steps.push_docs.outputs.imageid }}"
                  echo "Web Tags: ${{ steps.meta_web.outputs.tags }}"
                  echo "Web Labels: ${{ steps.meta_web.outputs.labels }}"
                  echo "Docs Tags: ${{ steps.meta_docs.outputs.tags }}"
                  echo "Docs Labels: ${{ steps.meta_docs.outputs.labels }}"

            - uses: actions/delete-package-versions@v5
              with:
                  package-type: container
                  package-name: ${{ env.WEB_IMAGE_NAME }}

            - uses: actions/delete-package-versions@v5
              with:
                  package-type: container
                  package-name: ${{ env.DOCS_IMAGE_NAME }}
